---
---

<div class="flex flex-col items-center justify-between relative">
    <div class="w-full flex flex-row items-baseline justify-between">
        <p class="text-[#99AABB] text-md font-light uppercase">Music Activity</p>
        <p id="music-status-text" class="text-[#99AABB]/80 text-xs font-light uppercase absolute top-[5px] right-0 mt-0 mr-0"></p>
    </div>
    <div class="w-full h-[1px] bg-[#99AABB]/40 mt-1"></div>

    <div id="lastfm-details-container" class="w-full min-h-[72px]">
    </div>
</div>

<script>
    const detailsContainer = document.getElementById('lastfm-details-container');
    const statusTextElement = document.getElementById('music-status-text');
    const REFRESH_INTERVAL = 30000;

    let intervalId: number | undefined;

    function renderSkeleton() {
        if (!detailsContainer || !statusTextElement) return;
        statusTextElement.textContent = '';
        detailsContainer.innerHTML = `
            <div class="w-full flex flex-row items-center mt-4 animate-pulse">
                <div class="w-12 h-12 rounded-sm bg-gray-700/50 mr-3"></div>
                <div class="flex flex-col justify-center overflow-hidden flex-1 space-y-2">
                    <div class="h-4 bg-gray-600/50 rounded w-3/4"></div>
                    <div class="h-3 bg-gray-700/50 rounded w-1/2"></div>
                </div>
            </div>
        `;
    }

    function renderError(message = "Couldn't load music activity.") {
        if (!detailsContainer || !statusTextElement) return;
        statusTextElement.textContent = 'Error';
        detailsContainer.innerHTML = `
            <p id="track-error" class="text-[#99AABB]/70 text-sm italic mt-4">${message}</p>
        `;
    }

    interface TrackApiResponse {
      track: {
          name: string;
          artist: string;
          albumArt: string | null;
          url: string;
          nowPlaying: boolean;
      } | null;
      statusText: string | null;
    }

    function renderTrackDetails(track: TrackApiResponse['track'], status: string) {
        if (!detailsContainer || !statusTextElement || !track) return;
        statusTextElement.textContent = status;

        const albumArtHtml = track.albumArt
            ? `<img
                    id="album-art-img"
                    src="${track.albumArt}"
                    alt="${track.name} album art"
                    width="48"
                    height="48"
                    loading="eager"
                    class="absolute inset-0 w-12 h-12 rounded-sm shadow-md object-cover outline outline-offset-0 outline-transparent transition-all duration-200 ease-in-out group-hover:outline-2 group-hover:outline-offset-[-2px] group-hover:outline-green-500"
                 />`
            : `<div
                    id="album-art-placeholder"
                    class="absolute inset-0 w-12 h-12 rounded-sm bg-gray-700 flex items-center justify-center text-white/50 text-xl shadow-md outline outline-offset-0 outline-transparent transition-all duration-200 ease-in-out group-hover:outline-2 group-hover:outline-offset-[-2px] group-hover:outline-green-500"
                 >
                    ?
                 </div>`;

        detailsContainer.innerHTML = `
            <a id="track-link" href="${track.url}" target="_blank" rel="noopener noreferrer" class="w-full flex flex-row items-center mt-4 group">
                <div id="album-art-container" class="relative w-12 h-12 mr-3 flex-shrink-0">
                    ${albumArtHtml}
                </div>
                <div class="flex flex-col justify-center overflow-hidden">
                    <p id="track-name" class="text-[#DDEEFF] text-sm font-medium truncate group-hover:text-green-400 transition-colors duration-200">
                        ${track.name}
                    </p>
                    <p id="track-artist" class="text-[#99AABB]/90 text-xs font-light truncate">
                        by ${track.artist}
                    </p>
                </div>
            </a>
        `;
    }

    async function fetchAndUpdateMusicData() {
        const endpoint = `/api/lastfm.json?t=${Date.now()}`;

        try {
            const response = await fetch(endpoint);

            if (!response.ok) {
                let errorMsg = `API Error (${response.status})`;
                try {
                    const errorData: TrackApiResponse = await response.json();
                    errorMsg = errorData.statusText || errorMsg;
                } catch (parseError) { }
                console.error('API Route Error:', response.status, response.statusText, errorMsg);
                renderError(errorMsg);
                return;
            }

            const data: TrackApiResponse = await response.json();

            if (data.track) {
                renderTrackDetails(data.track, data.statusText || '');
            } else {
                 renderError(data.statusText || "No music activity found.");
            }
        } catch (error) {
            console.error('Failed to fetch from API route:', error);
            renderError("Network Error");
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        renderSkeleton();
        fetchAndUpdateMusicData();
        intervalId = window.setInterval(fetchAndUpdateMusicData, REFRESH_INTERVAL);
    });

</script>